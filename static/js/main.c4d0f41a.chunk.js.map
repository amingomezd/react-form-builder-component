{"version":3,"sources":["../../src/components/helper.js","../../src/components/Builder.jsx","../../src/components/Input.jsx","../../src/components/Select.jsx","../../src/components/Checkbox.jsx","../../src/components/Textarea.jsx","../../src/components/Radio.jsx","../../src/components/Paragraph.jsx","../../src/components/Header.jsx","../../src/components/Form.jsx","App.js","index.js"],"names":["textAreaAdjust","el","element","fromBuilderStub","Builder","props","onSave","onChange","formState","useState","showCode","setShowCode","form","setFormState","addProperty","setAddProperty","editProperty","setEditProperty","useEffect","handleChangeFormInput","event","target","name","value","type","handlePropertyUpdate","payload","ftemp","title","description","widget","className","autofocus","required","options","optionstemp","mapOptions","key","t","x","y","z","onClick","autoFocus","onFocus","onKeyUp","e","JSON","onPropertySubmit","uuidv4","Object","toggleEdit","window","f","removeProperty","property","ui","PropertyForm","temp","formO","inputWrapperClass","inputClass","checkboxWrapperClass","checked","id","htmlFor","u","k","Input","Select","option","keys","Checkbox","checkboxClass","Radio","render","p","idx","o","Paragraph","Header","HeaderTag","types","Form","properties","onsubmit","values","requiredFields","handleInputChange","onSubmit","handleFormSubmit","pid","predefinedForm","App","preventDefault","console","log","stringify","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c4d0f41a.chunk.js","sourcesContent":["export function textAreaAdjust(el) {\n    const element = el.target;\n    element.style.height = \"1px\";\n    element.style.height = (25 + element.scrollHeight) + \"px\";\n}\n\nexport const fromBuilderStub = {\n    \"formStub\": {\n        \"title\": \"Onboard New Employee\",\n        \"description\": \"FLowhart to onboard new employee to the organization\",\n        \"required\": [],\n        \"properties\": {\n            \"intro\": {\n                \"title\": \"Introduction\",\n                \"description\": \"This is a paragraph element. You can update me or add new form elements.\"\n            }\n        },\n        \"ui\": {\n            \"intro\": {\n                \"widget\": \"paragraph\"\n            }\n        },\n        \"values\": {}\n    },\n    \"propertyStub\": {\n        \"title\": \"Title\",\n        \"description\": \"\",\n        \"options\": []\n    },\n    \"uiStub\": {\n        \"widget\": \"input\",\n        \"autofocus\": false,\n        \"className\": \"\"\n    },\n    \"widgets\": [\n        \"input\",\n        \"textarea\",\n        \"select\",\n        \"checkbox\",\n        \"radio\",\n        \"paragraph\",\n        \"header\",\n        \"hr\"\n    ],\n    \"inputClass\": \"form-control\",\n    \"checkboxClass\": \"form-check-input\",\n    \"checkboxWrapperClass\":\"form-check\",\n    \"inputWrapperClass\": \"form-group\",\n    \"btnClass\":\"btn\"\n}","import React, { Fragment, useEffect, useState } from 'react'\nimport { textAreaAdjust, fromBuilderStub } from './helper'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Builder = (props) => {\n    const { onSave, onChange, formState, propertyName } = props\n    const [showCode, setShowCode] = useState(false)\n    const [form, setFormState] = useState(formState ? formState : fromBuilderStub.formStub)\n    const [addProperty, setAddProperty] = useState(false)\n    const [editProperty, setEditProperty] = useState()\n\n\n    useEffect(() => {\n        onChange && onChange(form)\n    }, [form])\n\n\n    const handleChangeFormInput = (event) => {\n        const { target } = event;\n        const { name, type } = target;\n        const value = type === 'checkbox' ? target.checked : target.value;\n        event.persist();\n        setFormState({ ...form, [name]: value });\n    }\n\n    const handleChangeFormCode = (e) => {\n        const { target } = e\n        const { value } = target\n        setFormState(JSON.parse(value))\n    }\n\n    const removeProperty = (key) => {\n        if (!window.confirm(`Remove this property \"${form.properties[key].title}\" ?`)) return\n        const f = { ...form }\n        delete f.properties[key]\n        setFormState(f)\n    }\n\n    const handlePropertyUpdate = (payload) => {\n        const ftemp = { ...form }\n        const { name, title, description, widget, type, className, autofocus, required, options } = payload\n        const optionstemp = mapOptions(options)\n        let key = 'hello'\n        if (name) key = name\n        ftemp.properties[key] = {\n            title,\n            description,\n            type,\n            options: optionstemp\n        }\n        ftemp.ui[key] = {\n            className,\n            widget,\n            autofocus\n        }\n        required &&\n            !ftemp.required.includes(key) && ftemp.required.push(key);\n        setFormState(ftemp)\n    }\n\n    const mapOptions = (payload) => {\n        let t = payload && typeof (payload) === 'string' ? payload.split(/\\r?\\n/) : [];\n        if (t.length > 0) {\n            return t.map(x => {\n                const y = x.includes(\":\", 1) && x.split(':')\n                if (y) {\n                    const z = {}\n                    z[y[0]] = y[1];\n                    return z\n                }\n                return x\n            })\n        }\n        return t\n    }\n\n    const toggleEdit = (key) => {\n        if (editProperty && editProperty === key)\n            setEditProperty(null);\n        else\n            setEditProperty(key);\n        setAddProperty(false);\n    }\n\n    const toggleAdd = (state) => {\n        setAddProperty(state);\n        setEditProperty(null);\n    }\n\n\n    return <Fragment>\n        <h2>Form Detail <button className={`${fromBuilderStub.btnClass} btn${showCode ? '' : '-outline'}-primary`} \n        onClick={() => setShowCode(!showCode)}>{\"{  }\"}</button> </h2>\n\n        {showCode && <textarea\n            autoFocus={true}\n            onFocus={(e) => textAreaAdjust(e)}\n            onKeyUp={(e) => textAreaAdjust(e)}\n            className=\"form-control\"\n            onChange={handleChangeFormCode}\n            value={JSON.stringify(form, undefined, 4)}></textarea>}\n\n        {!showCode && <>\n            <div className=\"form-group\">\n                <label>Form Title</label>\n                <input type=\"text\" className={fromBuilderStub.inputClass} name=\"title\" \n                onChange={handleChangeFormInput} value={form.title} />\n            </div>\n            <div className=\"form-group\">\n                <label>Description</label>\n                <textarea className={fromBuilderStub.inputClass}\n                    name=\"description\"\n                    onChange={handleChangeFormInput}\n                    value={form.description} ></textarea>\n            </div>\n\n\n            <h3 className=\"mt-3\">Properties</h3>\n            <button className={`${fromBuilderStub.btnClass} btn${addProperty ? \"\" : \"-outline\"}-primary btn-block`}\n                onClick={() => toggleAdd(!addProperty)}><i className=\"fa fa-plus-circle\"></i> Add Property</button>\n            {addProperty && <div className=\"bg-primary rounded p-2\">\n                <PropertyForm onPropertySubmit={handlePropertyUpdate} name={uuidv4()} />\n            </div>}\n            <ul className=\"list-unstyled border-top\">\n                {Object.keys(form.properties).map((key, idx) => {\n                    return <li key={key + idx} className={`border p-2 rounded my-1 ${editProperty === key ? 'bg-primary' : ''}`}>\n                        <span onClick={() => toggleEdit(key)}\n                            className={`font-weight-bold btn-link btn ${editProperty === key ? 'text-white' : 'text-dark'}`}>\n                            {form.properties[key].title} {editProperty === key ? '- Edit' : ''}\n                        </span>\n                        <button\n                            onClick={() => removeProperty(key)}\n                            className={`${fromBuilderStub.btnClass}  float-right ${editProperty === key ? 'btn-primary' : 'btn-link'}`}>\n                            X\n                        </button>\n                        {editProperty === key && <PropertyForm\n                            onPropertySubmit={handlePropertyUpdate} name={key}\n                            property={form.properties[key]}\n                            required={form.required}\n                            ui={form.ui[key]} />}\n                    </li>\n                })}\n            </ul>\n        </>\n        }\n        <button type=\"button\" className={`${fromBuilderStub.btnClass} btn-primary`} onClick={(e) => onSave(e)}>Save Form</button>\n    </Fragment>\n}\n\n\nconst PropertyForm = (props) => {\n    const { name, property, ui, onPropertySubmit, required } = props\n    const temp = property ? { ...property } : { ...fromBuilderStub.propertyStub }\n    Object.assign(temp, ui ? ui : fromBuilderStub.uiStub);\n    if (!temp.name) temp.name = name;\n    temp.required = required ? required.includes(name) : false\n    const [form, setFormState] = useState(temp)\n    const [formO, setFormOState] = useState(temp)\n\n    const handleChangeFormInput = (event) => {\n        const { target } = event;\n        const { name, type } = target;\n        const value = type === 'checkbox' ? target.checked : target.value;\n        event.persist();\n        setFormState({ ...form, [name]: value });\n    }\n    useEffect(() => {\n        onPropertySubmit(form)\n    }, [form])\n\n    const discardChanges = () => {\n        setFormState(formO)\n    }\n\n    const handleOptions = (t) => {\n        if (typeof (t) === 'string')\n            return t\n        if (t.length > 0)\n            return t.map(u => {\n                if (typeof u === 'object' && u !== null) {\n                    return Object.keys(u).map(k => {\n                        return k + ':' + u[k]\n                    })\n                }\n                else if (typeof (u) === 'string' || typeof (u) === 'number')\n                    return u\n            }).join('\\n')\n        return ''\n    }\n\n    return <div className=\"border p-3 bg-white rounded\">\n        <div className={`${fromBuilderStub.inputWrapperClass}`}>\n            <label>Widget</label>\n            <select className={`${fromBuilderStub.inputClass}`} value={form?.widget} name=\"widget\" onChange={handleChangeFormInput}  >\n                {fromBuilderStub.widgets.map((widget, idx) => {\n                    return <option key={widget + idx} value={widget}>{widget}</option>\n                })}\n            </select>\n        </div>\n        <div className=\"form-row\">\n            <div className={`${fromBuilderStub.inputWrapperClass} col`}>\n                <label>Title</label>\n                <input type=\"text\" value={form?.title} name=\"title\"\n                    onChange={handleChangeFormInput} className={`${fromBuilderStub.inputClass}`} />\n            </div>\n            <div className={`${fromBuilderStub.inputWrapperClass} col`}>\n                <label>Type</label>\n                <input type=\"text\" value={form?.type} name=\"type\"\n                    onChange={handleChangeFormInput} className={`${fromBuilderStub.inputClass}`} />\n            </div>\n        </div>\n        <div className={`form-row ${fromBuilderStub.inputWrapperClass}`}>\n            <div className=\"col\">\n                <div className={`${fromBuilderStub.checkboxWrapperClass}`}>\n                    <input type=\"checkbox\" name=\"required\"\n                        checked={form?.required} onChange={handleChangeFormInput}\n                        className={`${fromBuilderStub.checkboxClass}`} id=\"required\" />\n                    <label className=\"form-check-label\" htmlFor=\"required\">Required</label>\n                </div>\n            </div>\n            <div className=\"col\">\n                <div className={`${fromBuilderStub.checkboxWrapperClass}`}>\n                    <input type=\"checkbox\" name=\"autofocus\"\n                        checked={form?.autofocus} onChange={handleChangeFormInput}\n                        className={`${fromBuilderStub.checkboxClass}`} id=\"autofocus\" />\n                    <label className=\"form-check-label\" htmlFor=\"autofocus\">Autofocus</label>\n                </div>\n            </div>\n        </div>\n        <div className={`${fromBuilderStub.inputWrapperClass}`}>\n            <label>Class Name</label>\n            <input type=\"text\" value={form?.className}\n                onChange={handleChangeFormInput} name=\"className\" className={`${fromBuilderStub.inputClass}`} />\n        </div>\n        <div className={`${fromBuilderStub.inputWrapperClass}`}>\n            <label>Options <small>(Add options separated by new line)</small></label>\n            <textarea className={`${fromBuilderStub.inputClass}`} name=\"options\"\n                onChange={handleChangeFormInput}\n                value={form.options ? handleOptions(form.options) : ''} ></textarea>\n        </div>\n        <div className={`${fromBuilderStub.inputWrapperClass}`}>\n            <label>Description</label>\n            <textarea className={`${fromBuilderStub.inputClass}`} name=\"description\"\n                onChange={handleChangeFormInput}\n                value={form.description ? form.description : ''} ></textarea>\n        </div>\n\n        <button type=\"button\" className={`${fromBuilderStub.btnClass} btn-outline-warning btn-sm`} onClick={() => discardChanges()}>\n            <i className=\"fa fa-history\"></i> Discard Changes</button>\n    </div>\n}\n\nexport default Builder","import React from 'react'\nimport { fromBuilderStub } from './helper'\n\nconst Input = (props) => {\n    const { onChange, title, name, autofocus, type, className, value, required } = props\n    return <div className={`${fromBuilderStub.inputWrapperClass}`}>\n        <label>{title}</label>\n        <input type={type}\n            required={required}\n            autoFocus={autofocus ? 'autofocus' : false}\n            onChange={onChange ? (e) => onChange(e) : ''}\n            name={name}\n            value={value}\n            className={`${fromBuilderStub.inputClass} ${className}`}\n        />\n    </div>\n}\n\nexport default Input","import React from 'react'\nimport { fromBuilderStub } from './helper'\n\nconst Select = (props) => {\n    const { onChange, title, name, autofocus, className, options, required } = props\n    return <div className={`${fromBuilderStub.inputWrapperClass}`}>\n        <label>{title}</label>\n        <select\n            autoFocus={autofocus ? 'autofocus' : false}\n            onChange={onChange ? (e) => onChange(e) : ''}\n            name={name}\n            required={required}\n            className={`${fromBuilderStub.iputWrapper} ${className}`}  >\n            {options && options.map((option, idx) => {\n                if (typeof option === 'object' && option !== null) {\n                    const keys = Object.keys(option)\n                    return <option key={idx} value={keys[0]}>{option[keys[0]]}</option>\n                }\n                else if (typeof (option) === 'string' || typeof (option) === 'number')\n                    return <option key={idx} value={option}>{option}</option>\n            })}\n        </select>\n    </div>\n}\n\nexport default Select","\nimport React from 'react'\nimport { fromBuilderStub } from './helper'\n\nconst Checkbox = (props) => {\n    const { onChange, title, name, autofocus } = props\n    return <div className={`${fromBuilderStub.checkboxWrapperClass} mb-3`}>\n        <input type=\"checkbox\"\n            id={name}\n            autoFocus={autofocus ? 'autofocus' : false}\n            onChange={onChange ? (e) => onChange(e) : ''}\n            name={name}\n            className={`${fromBuilderStub.checkboxClass}`}\n        />\n        <label className=\"form-check-label\" htmlFor={name}>{title}</label>\n    </div>\n\n}\n\nexport default Checkbox","import React from 'react'\nimport { fromBuilderStub } from './helper'\n\nconst Input = (props) => {\n    const { onChange, title, name, autofocus, className, required } = props\n    return <div className={`${fromBuilderStub.inputWrapperClass}`}>\n        <label>{title}</label>\n        <textarea autoFocus={autofocus ? 'autofocus' : false}\n            required={required}\n            onChange={onChange ? (e) => onChange(e) : ''}\n            name={name} className={`${fromBuilderStub.inputClass} ${className}`} ></textarea>\n    </div>\n}\n\nexport default Input","import React from 'react'\nimport { fromBuilderStub } from './helper'\n\nconst Radio = (props) => {\n    const { onChange, title, name, autofocus, className, options, required } = props\n\n    const render = (p, idx) => {\n        return <div className=\"d-inline mr-3\" key={idx}>\n            <input type=\"radio\"\n                id={p.id}\n                required={required}\n                autoFocus={autofocus ? 'autofocus' : false}\n                onChange={onChange ? (e) => onChange(e) : ''}\n                name={name}\n                value={p.value}\n\n            />\n            <label htmlFor={p.id}\n                className={\"pl-1\"}\n            >{p.label}\n            </label>\n        </div>\n    }\n    return <div className={`${fromBuilderStub.inputWrapperClass} clearfix`}>\n        {options && options.map((option, idx) => {\n            if (typeof option === 'object' && option !== null) {\n                const keys = Object.keys(option)\n                const o = { 'id': name + option[keys[0]], 'label': option[keys[0]], value: keys[0] }\n                return render(o, idx)\n            }\n            else if (typeof (option) === 'string' || typeof (option) === 'number') {\n                const o = { 'id': name + option, 'label': option, value: option }\n                return render(o, idx)\n            }\n        })}\n    </div>\n}\n\nexport default Radio","import React from 'react'\nimport { fromBuilderStub } from './helper'\n\nconst Paragraph = (props) => {\n    const { title, description } = props\n    return <div className={`${fromBuilderStub.inputWrapperClass}`}>\n        <label>{title}</label>\n        <p>{description}</p>\n    </div>\n}\n\nexport default Paragraph","import React from 'react'\n\nconst Header = (props) => {\n    const { title, description, className, type } = props\n    const types = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]\n    const HeaderTag = types.includes(type) ? `${type}` : 'h1';\n\n\n    return <HeaderTag className={className}>{title}</HeaderTag>\n}\n\nexport default Header","import React, { useState } from 'react'\nimport Input from './Input'\nimport Select from './Select'\nimport Checkbox from './Checkbox'\nimport Textarea from './Textarea'\nimport Radio from './Radio'\nimport Paragraph from './Paragraph'\nimport Header from './Header'\nimport { fromBuilderStub } from './helper'\n\nconst Form = (props) => {\n    const { properties, required, ui, description, title, onsubmit, values } = props\n    const [requiredFields, setRequiredFields] = useState(required ? required : [])\n    const [form, setFormState] = useState(values ? values : {})\n\n    const render = (property, key, pid) => {\n        property.name = key\n        const widget = ui[key] && ui[key].widget ? ui[key].widget : key === 'hr' ? 'hr' : 'input'\n        switch (widget) {\n            case 'input':\n                return <Input key={key + pid}\n                    value={form?.[key]}\n                    required={requiredFields.includes(key)}\n                    {...property} {...ui[key]}\n                    onChange={handleInputChange} />\n            case 'select':\n                return <Select key={key + pid} {...property} {...ui[key]}\n                    required={requiredFields.includes(key)}\n                    onChange={handleInputChange} />\n            case 'radio':\n                return <Radio key={key + pid} {...property} {...ui[key]}\n                    required={requiredFields.includes(key)}\n                    onChange={handleInputChange} />\n            case 'checkbox':\n                return <Checkbox key={key + pid} {...property} {...ui[key]}\n                    required={requiredFields.includes(key)}\n                    onChange={handleInputChange} />\n            case 'textarea':\n                return <Textarea key={key + pid} {...property} {...ui[key]}\n                    required={requiredFields.includes(key)}\n                    onChange={handleInputChange} />\n            case 'paragraph':\n                return <Paragraph key={key + pid} {...property} {...ui[key]} />\n            case 'header':\n                return <Header key={key + pid} {...property} {...ui[key]} />\n            case 'hr':\n                return <hr key={key + pid} />\n        }\n    }\n\n\n    const handleInputChange = (event) => {\n        const { target } = event;\n        const { name, type } = target;\n        const value = type === 'checkbox' ? target.checked : target.value;\n        event.persist();\n        setFormState({ ...form, [name]: value });\n    }\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault()\n        onsubmit && onsubmit(form)\n    }\n\n    return <form onSubmit={(e) => handleFormSubmit(e)}>\n        <h2 className=\"my-3\">{title}</h2>\n        <p>{description}</p>\n        {properties && Object.keys(properties).map((key, pid) => {\n            return properties[key] && render(properties[key], key, pid)\n        })}\n        <button type=\"submit\" className={`${fromBuilderStub.btnClass} btn-primary`}>Submit</button>\n    </form>\n}\n\nexport default Form;","import React, { useState } from 'react'\n\nimport { FormBuilder, FormRender } from 'react-form-builder-component'\nimport 'react-form-builder-component/dist/index.css'\n\n\nconst predefinedForm = {\n  \"title\": \"Form Builder Demo\",\n  \"description\": \"Demo of form builder component for React JS\",\n  \"required\": [\"fullname\"],\n  \"properties\": {\n    \"intro\": {\n      \"title\": \"Introduction\",\n      \"description\": \"This is a paragraph element. You can update me or add new form elements.\"\n    },\n    \"fullname\": {\n      \"title\": \"Full Name\",\n      \"description\": \"Enter Full Name\"\n    }\n  },\n  \"ui\": {\n    \"intro\": {\n      \"widget\": \"paragraph\"\n    },\n    \"fullname\": {\n      \"className\": \"text-success\"\n    }\n  },\n  \"values\": {}\n}\n\nconst App = () => {\n  const [form, setFormState] = useState({})\n\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n    console.log(JSON.stringify(form))\n  }\n\n\n  const handleSubmitDummy = (payload) => {\n    console.log(payload)\n  }\n\n\n  const onFormBuilderUpdate = (payload) => {\n    setFormState(payload)\n  }\n  return <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-12 col-sm-4\"><FormBuilder onSave={handleFormSubmit} formState={predefinedForm} onChange={onFormBuilderUpdate} /></div>\n      <div className=\"col text-muted border-left \">\n        <h2>Preview</h2>\n        <div className=\"form-preview border\">\n          <FormRender {...form}\n            onsubmit={handleSubmitDummy} /></div>\n\n      </div>\n\n    </div>\n  </div>\n}\n\nexport default App","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}